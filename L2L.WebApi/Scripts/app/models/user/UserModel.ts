interface IProfileModel extends ITrackModify {
    id?: number;
    firstName?: string;
    lastName?: string;
    birthDate?: Date;
    profileImageUrl?: string;
    userId?: number;
}

interface IUserPointsBase {
    dailyNormalPointsQuizzSelfStrList?: string;
    dailyNormalPointsQuizzOthersStrList?: string;
    dailySpecialPointsQuizzStrList?: string;
    dailyPointsAllStrList?: string;
    badgeStrList?: string;
    totalDailyRewardItems?: number;
    dailyNormalPointsQuizzSelfIntList?: number[];
    dailyNormalPointsQuizzOthersIntList?: number[];
    dailySpecialPointsQuizzIntList?: number[];
    dailyPointsAllIntList?: number[];
    badgeIntList?: number[];
}

interface IUserModel extends IUserPointsBase {
    id?: number;
    userType?: any;
    localAuthUserId?: string;
    userName?: string;
    email?: string;
    profileId?: number;
    profile?: IProfileModel;

    points?: number;
    dailyPoints?: number;
    dailyPointsDate?: string;
    totalBadge?: number;
    isAdmin?: boolean;
    isEmailConfirmed?: boolean;
    isThirdPartyLogin?: boolean;

    asUserDependents?: IDependentModel[];
    dependentPermission?: IDependentPermissionModel;

    // for view
    isGuest?: boolean;
    isReady: boolean;
}

interface IDependentModel {
    id: number;
    isPrimary: boolean;
    userId: number;
    childId: number;

    dependentFullName: string;
}

interface IDependentUserModel {
    id?: number;
    userName?: string;
    profile?: IProfileModel;
    userType?: any;
    isCurrentUserPrimary?: boolean;
    permissions: IDependentPermissionModel;
    notificationsSubscription: IDependentNotificationModel;
}

interface IDependentPermissionModel extends ITrackModify {
    id?: number;
    canAcceptQuizzmateRequests?: boolean;
    canUseMessaging?: boolean;
}

interface IDependentNotificationModel extends ITrackModify {
    childId?: number;
    nwQuizzSubmit?: boolean;
    nwQuizzLive?: boolean;
    nwQuizzReceiveComment?: boolean;
    nwPostComment?: boolean;
    nwPostedCommentFlagged?: boolean;
    nwQuestionFlagged?: boolean;
    nwMessageSent?: boolean;
    nwMessageReceived?: boolean;
    nwQuizzmateRequest?: boolean;
    nwQuizzmateRequestAccept?: boolean;
}

interface IQuizzerModel extends ITrackModify, IUserPointsBase {
    id?: number;
    userName?: string;
    userType?: number;

    profile?: IProfileModel;
    points?: number;
    dailyPoints?: number;
    dailyPointsDate?: string;
    totalBadge?: number;

    // generated by query
    numQuizzes?: number;
    userFullName?: string;
    isQuizzmate?: boolean;
    friendRequestSentId?: number;
    isFriendRequestSent?: boolean;
    friendRequestPendingId?: number;
    isFriendRequestPending?: boolean;

    // not used
    friendRequestId?: number;
    isQuizzlingRequestSent?: boolean;
    isFollowing?: boolean;

    // from code
    isSelf?: boolean;
    isParent?: boolean;
    isDependent?: boolean;
    relationshipNotification?: IRelationshipNotificationModel;

    // for view
    isProfilePixModified?: boolean;
    profilePix?: any;
    profilePixName?: string;
}